-
  section: Course Description
  body:
    type: paragraph
    content: Problem-solving and design using an object-oriented programming language. Introduces a variety of problem-solving techniques, algorithms, and data structures in object-oriented programming. (3-2-4)
-
  section: Instructor
  body:
    type: identity
    content:
      name: Dylan Boliske
      hours: 16.30-17.00 + 18.15+18.45 CDT
      office: SB 105C
      mailbox: CS Dept. (SB 235-236)
-
  section: Textbooks
  body:
    type: multiple
    content:
      -
        type: callout
        content:
          title: Important
          level: info
          text: None of these are required textbooks. They are simply additional resources that you are welcome to use. Additionally, none of these need to be purchased as they are all available online as e-books through Galvin Library.
      -
        type: book
        content:
          title: Programming and Problem Solving with Java
          author: Nell Dale, Chip Weems, and Mark R Headington
          publisher: Jones and Bartlett Publishers © 2003
          isbn: 9780763704902
      -
        type: book
        content:
          title: Java All-In-One Desk Reference For Dummies, 2nd Edition
          author: Doug Lowe and Barry Burd
          publisher: John Wiley & Sons © 2007
          isbn: 9780470124512
      -
        type: book
        content:
          title: "Object-Oriented Programming: From Problem Solving to Java"
          author: Jose M Garrido
          publisher: Cengage Charles River Media © 2003
          isbn: 9781584502876
-
  section: Resources
  body:
    type: multiple
    content:
      -
        type: resource
        content:
          name: Java SE Development Kit
          text: As this course will require you to write and run Java code, you will need to download the Java compiler. The download for this compiler can be found below. I will be focusing on Java version 8 as it is one of the most widely used versions, but any release newer than that should still work if you stick with the code discussed during lecture.
          links:
            -
              -
                label: Download Java JDK
                to: https://www.oracle.com/java/technologies/javase/javase-jdk8-downloads.html
      -
        type: resource
        content:
          name: Integrated Development Environment
          text: You are welcome to use any IDE (an application used to write, read, and run code) you wish, however, I will be using Eclipse for lectures and demonstrations as it is installed on all the campus computers. If you choose to use Eclipse as well, you will want to install the 'Eclipse IDE for Java Developers'.
          links:
            -
              -
                label: Download Eclipse
                to: https://www.eclipse.org/downloads/
      -
        type: resource
        content:
          name: Version Control
          text: We will be using BitBucket as our version control and submissions system for labs, exams, and the project this semester. You can either use the built in Git controls in your IDE, terminal commands, or another standalone application (such as SourceTree or GitKraken) to handle committing, pushing, and pulling from your repository, which will be set up for you.
          links:
            -
              -
                label: Visit BitBucket
                to: https://bitbucket.org/dashboard/repositories
            -
              -
                label: Download SourceTree
                to: https://www.sourcetreeapp.com/
              -
                label: Download GitKraken
                to: https://www.gitkraken.com/download
      -
        type: resource
        content:
          name: Discord
          text: While you are always welcome to email either myself of the TAs with questions, sometimes, for simple questions, it might be easier to just send a quick message that the TAs, myself, or even other students could answer. For this reason, I've also set up a Discord server this semester to allow for quicker, easier communication.
          links:
            -
              -
                label: Download Discord
                to: https://discordapp.com/download
          
-
  section: Course Goals
  body:
    type: list
    content:
      - "Analyze and explain the behavior of simple programs involving the following fundamental programming constructs: assignment, I/O (including file I/O), selection, iteration, methods"
      - "Write a program that uses each of the following fundamental programming constructs: assignment, I/O (including file I/O), selection, iteration, methods"
      - "Break a problem into logical pieces that can be solved (programmed) independently."
      - "Develop, and analyze, algorithms for solving simple problems."
      - "Use a suitable programming language, and development environment, to implement, test, and debug algorithms for solving simple problems."
      - "Write programs that use each of the following data structures (and describe how they are represented in memory): strings, arrays"
      - "Explain the basics of the concept of recursion."
      - "Write, test, and debug simple recursive functions and procedures."
      - "Explain and apply object-oriented design and testing involving the following concepts: data abstraction, encapsulation, information hiding, inheritance, polymorphism"
      - "Use a development environment to design, code, test, and debug simple programs, including multi-file source projects, in an object-oriented programming language."
      - "Implement basic error handling"
      - "Solve problems by creating and using sequential search, binary search, and quadratic sorting algorithms (selection, insertion)"
      - "Determine the time complexity of simple algorithms."
      - "Apply appropriate problem-solving strategies"
      - "Use APIs (Application Programmer Interfaces) and design/program APIs"
-
  section: Course Outcomes
  body:
    type: list
    content:
      - "An ability to apply knowledge of computing and mathematics appropriate to the program's student outcomes and to the discipline."
      - "An ability to analyze a problem, and identify and define the computing requirements appropriate to its solution."
      - "An ability to design, implement and evaluate a computer-based system, process, component, or program to meet desired needs."
      - "An ability to use current techniques, skills, and tools necessary for computing practices."
      - "An ability to apply mathematical foundations, algorithmic principles, and computer science theory in the modeling and design of computer-based systems in a way that demonstrates comprehension of the tradeoffs involved in design choices."
      - "An ability to apply design and development principles in the construction of software systems of varying complexity."
-
  section: Assignments
  body:
    type: multiple
    content:
      -
        type: paragraph
        content: The assignments are designed to assist you in developing a more concrete understanding of the concepts introduced in class. They also serve as a springboard for the programming project that you will create later in the semester. You are required to do each assignment. Assignments will be pushed to your repository no later than the due date for the previous assignment. Additional coding demonstrations and information concerning the assignments will be given during the lab period. As a result, attendance to the labs is strongly encouraged.
      -
        type: paragraph
        content: "The policy for late assignments is this: 10% off for each day late, up to 5 days late. Your TA will pull your repositories exactly 5 days after the assignment is due in order to grade them, so if you intend for the assignment to be graded, please make sure you push your code to your repository and that it shows up when looking at the web interface."
-
  section: Exams
  body:
    type: paragraph
    content: You will have two exams, one midterm and one final. Exams are closed book, closed notes, closed neighbor, no calculators, and no cell phones. Each exam will, generally, be four questions each focusing on a different topic covered during the semester. If you are caught cheating on an exam, you will automatically receive a zero. There are no make-up exams without an university-accepted excuse.
-
  section: Project
  body:
    type: paragraph
    content: "You will be assigned a programming project where you solve a real world problem. The project will consist of a design phase and an implementation phase. No late projects will be accepted. Each student is responsible for deleting their project from labs computers and taking all safeguards to prevent copying of the final project. The instructor has the right to test (written or oral) any student on their project. All projects found to be similar to another student's project will be given a grade of zero. There are 2 parts to the final project: design and coding. Part II will NOT be accepted without a reasonable Part I submission. The instructor reserves the right to assign a failing semester grade to any student who fails or does not submit the final project."
-
  section: Grading
  body:
    type: multiple
    content:
      -
        type: paragraph
        content: The instructor reserves the right to fail any student that receives a failing score on the final exam, regardless of their scores on the other assignments.
      -
        type: graph
        content:
          -
            label: Lab Assignments
            value: 20
          -
            label: Final Project
            value: 20
          -
            label: Midterm Exam
            value: 30
          - label: Final Exam
            value: 30
      -
        type: table
        content:
          title: Undergraduates
          rows:
            -
              - A
              - 90-100
            -
              - B
              - 80-89
            -
              - C
              - 70-79
            -
              - D
              - 60-69
            -
              - E
              - 0-59
      -
        type: table
        content:
          title: Graduates
          rows:
            -
              - A
              - 90-100
            -
              - B
              - 80-89
            -
              - C
              - 70-79
            -
              - E
              - 0-69
-
  section: Academic Honesty
  body:
    type: raw
    content:
      The IIT’s policy on academic honesty can be found here. Any indication of copying or cheating during exams, on assignments, or on the programming project will be considered a violation of academic integrity policy and will result in an immediate zero for the assignment for all parties involved. The unauthorized procuring or disseminating of solution to exams, quizzes, and assignments is also considered a violation of the academic integrity policy. All violations of academic integrity will be reported to <a href="mailto:academichonesty@iit.edu">academichonesty@iit.edu</a>.
-
  section: Disabilities
  body:
    type: raw
    content:
      Reasonable accommodations will be made for students with documented disabilities. In order to receive accommodations, students must obtain a letter of accommodation from the Center for Disability Resources and make an appointment to speak with me as soon as possible. My office hours are listed above. The Center for Disability Resources can be contacted at 312-567-5744 or <a href="mailto:disabilities@iit.edu">disabilities@iit.edu</a>.
-
  section: Title IX
  body:
    type: multiple
    content:
      -
        type: paragraph
        content: Our school is committed to fostering a safe, productive learning environment. Title IX and our school policy prohibits discrimination on the basis of sex. Sexual misconduct — including harassment, domestic and dating violence, sexual assault, and stalking — is also prohibited at our school.
      -
        type: paragraph
        content: Our school encourages anyone experiencing sexual misconduct to talk to someone about what happened, so they can get the support they need and our school can respond appropriately.
      -
        type: paragraph
        content: If you wish to speak confidentially about an incident of sexual misconduct, want more information about filing a report, or have questions about school policies and procedures, please contact our Title IX Coordinator, which can be found on our school's website. Our school is legally obligated to investigate reports of sexual misconduct, and therefore it cannot guarantee the confidentiality of a report, but it will consider a request for confidentiality and respect it to the extent possible.
      -
        type: paragraph
        content: As a teacher, I am also required by our school to report incidents of sexual misconduct and thus cannot guarantee confidentiality. I must provide our Title IX coordinator with relevant details such as the names of those involved in the incident.